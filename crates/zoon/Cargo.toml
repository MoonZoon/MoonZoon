[package]
name = "zoon"
version = "0.1.0"
authors = ["Martin Kav√≠k <martin@kavik.cz>"]
edition = "2021"

[dependencies]
# wasm-bindgen has to match the version installed by mzoon
# @TODO install the compatible (aka the same) version by mzoon automatically?
wasm-bindgen = { version = "=0.2.83", default-features = false }
wasm-bindgen-futures = { version = "0.4.31", default-features = false }
js-sys = { version = "0.3.58", default-features = false }
futures-signals = { version = "0.3.29", default-features = false }
futures-util = { version = "0.3.21", default-features = false }
futures-channel = { version = "0.3.21", default-features = false }
dominator = { version = "0.5.28", default-features = false }
paste = { version = "1.0.7", default-features = false }
send_wrapper = { version = "0.6.0", default-features = false }
pin-project = { version = "1.0.11", default-features = false }
once_cell = { version = "1.12.0", features = ["alloc"], default-features = false }
gensym = { version = "0.1.0", default-features = false }
strum = { version = "0.24.1", features = ["derive"], default-features = false }
# @TODO (?) remove `num-traits` once there is an alternative in Rust,
# see https://doc.rust-lang.org/core/convert/trait.FloatToInt.html
num-traits = { version = "0.2.15", features = ["std"], default-features = false }

route_macro = { path = "../route_macro", default-features = false, optional = true }
static_ref_macro = { path = "../static_ref_macro", default-features = false, optional = true }
moonlight = { path = "../moonlight", features = ["frontend"], optional = true }
hsluv = { path = "../hsluv", features = ["hsluv_macro"], default-features = false }
lang = { path = "../lang", default-features = false }

console_error_panic_hook = { version = "0.1.7", default-features = false, optional = true }
wee_alloc = { version = "0.4.5", default-features = false, optional = true }
# wasm-tracing-allocator = { version = "0.1.1", default-features = false, optional = true }
enclose = { version = "1.1.8", default-features = false, optional = true }
apply = { version = "0.3.0", default-features = false, optional = true }
serde-lite = { version = "0.3.1", features = ["derive"], default-features = false, optional = true }
serde = { version = "1.0.137", features = ["derive", "std", "rc"], default-features = false, optional = true }
serde_json = { version = "1.0.81", features = ['std'], default-features = false, optional = true }
thiserror = { version = "1.0.31", default-features = false, optional = true }
chrono = { version = "0.4.19", default-features = false, optional = true }
serde-wasm-bindgen = { version = "0.4.5", default-features = false, optional = true }

ufmt = { version = "0.1.0", features = ["std"], default-features = false, optional = true }
lexical = { git = "https://github.com/Alexhuszagh/rust-lexical", rev = "7010efd5e144faff0c9afbc1b22b47d9d9567966", features = ["std"], default-features = false, optional = true }

[dependencies.web-sys]
version = "0.3.58"
features = [
  'css',
  'CssKeyframesRule',
  'CssRule',
  'CssRuleList',
  'CssStyleDeclaration',
  'CssStyleRule',
  'CssStyleSheet',
  'DataTransfer',
  'DomRect',
  'DomRectReadOnly',
  'Element',
  'Event',
  'EventTarget',
  'File',
  'FileList',
  'Headers',
  'History',
  'HtmlAnchorElement',
  'HtmlButtonElement',
  'HtmlCanvasElement',
  'HtmlDivElement',
  'HtmlElement',
  'HtmlBodyElement',
  'HtmlImageElement',
  'HtmlInputElement',
  'HtmlLabelElement',
  'HtmlLinkElement',
  'HtmlParagraphElement',
  'HtmlScriptElement',
  'HtmlTemplateElement',
  'HtmlVideoElement',
  'Location',
  'Performance',
  'PointerEvent',
  'Response',
  'ResponseInit',
  'ReadableStream',
  'Request',
  'RequestInit',
  'Storage',
  'SvgsvgElement',
  'WheelEvent',
]
default-features = false

[features]
default = [
  "static_ref", 
  "panic_hook", 
  "small_alloc", 
  "clone", 
  "apply", 
  "connection", 
  "routing", 
  "web_storage", 
  "chrono",
  "jsvalue_into_serde",
]
routing = ["route_macro"]
connection = ["moonlight"]
static_ref = ["static_ref_macro"]
panic_hook = ["console_error_panic_hook"]
small_alloc = ["wee_alloc"]
fast_alloc = []
# tracing_alloc = ["wasm-tracing-allocator"]
clone = ["enclose"]  # @TODO use Dominator's clone! instead?
fmt = ["ufmt", "lexical"]
web_storage = ["serde", "serde_json", "thiserror"]
# @TODO is "wasm-bindgen/serde-serialize" still needed?
jsvalue_into_serde = ["wasm-bindgen/serde-serialize", "serde-wasm-bindgen"]
